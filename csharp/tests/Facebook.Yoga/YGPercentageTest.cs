/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

 // @Generated by gentest/gentest.rb from gentest/fixtures/YGPercentageTest.html

using System;
using NUnit.Framework;

namespace Facebook.Yoga
{
    [TestFixture]
    public class YGPercentageTest
    {
        [Test]
        public void Test_percentage_width_height()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.Width = 30f;
            root_child0.Height = 30f;
            root.Insert(0, root_child0);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(60f, root_child0.LayoutWidth);
            Assert.AreEqual(60f, root_child0.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(140f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(60f, root_child0.LayoutWidth);
            Assert.AreEqual(60f, root_child0.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_position_left_top()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 400f;
            root.Height = 400f;

            YogaNode root_child0 = new YogaNode();
            root_child0.SetPosition(YogaEdge.Left, 10f);
            root_child0.SetPosition(YogaEdge.Top, 20f);
            root_child0.Width = 45f;
            root_child0.Height = 55f;
            root.Insert(0, root_child0);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(400f, root.LayoutWidth);
            Assert.AreEqual(400f, root.LayoutHeight);

            Assert.AreEqual(40f, root_child0.LayoutX);
            Assert.AreEqual(80f, root_child0.LayoutY);
            Assert.AreEqual(180f, root_child0.LayoutWidth);
            Assert.AreEqual(220f, root_child0.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(400f, root.LayoutWidth);
            Assert.AreEqual(400f, root.LayoutHeight);

            Assert.AreEqual(260f, root_child0.LayoutX);
            Assert.AreEqual(80f, root_child0.LayoutY);
            Assert.AreEqual(180f, root_child0.LayoutWidth);
            Assert.AreEqual(220f, root_child0.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_position_bottom_right()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 500f;
            root.Height = 500f;

            YogaNode root_child0 = new YogaNode();
            root_child0.SetPosition(YogaEdge.Right, 20f);
            root_child0.SetPosition(YogaEdge.Bottom, 10f);
            root_child0.Width = 55f;
            root_child0.Height = 15f;
            root.Insert(0, root_child0);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(500f, root.LayoutWidth);
            Assert.AreEqual(500f, root.LayoutHeight);

            Assert.AreEqual(-100f, root_child0.LayoutX);
            Assert.AreEqual(-50f, root_child0.LayoutY);
            Assert.AreEqual(275f, root_child0.LayoutWidth);
            Assert.AreEqual(75f, root_child0.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(500f, root.LayoutWidth);
            Assert.AreEqual(500f, root.LayoutHeight);

            Assert.AreEqual(125f, root_child0.LayoutX);
            Assert.AreEqual(-50f, root_child0.LayoutY);
            Assert.AreEqual(275f, root_child0.LayoutWidth);
            Assert.AreEqual(75f, root_child0.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 50f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 1f;
            root_child1.FlexBasis = 25f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(125f, root_child0.LayoutWidth);
            Assert.AreEqual(200f, root_child0.LayoutHeight);

            Assert.AreEqual(125f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(75f, root_child1.LayoutWidth);
            Assert.AreEqual(200f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(75f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(125f, root_child0.LayoutWidth);
            Assert.AreEqual(200f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(75f, root_child1.LayoutWidth);
            Assert.AreEqual(200f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_cross()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 50f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 1f;
            root_child1.FlexBasis = 25f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(125f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(125f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(75f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(125f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(125f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(75f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_cross_min_height()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.MinHeight = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 2f;
            root_child1.MinHeight = 10f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(140f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(140f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(60f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(140f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(140f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(60f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_main_max_height()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 10f;
            root_child0.MaxHeight = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 10f;
            root_child1.MaxHeight = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(52f, root_child0.LayoutWidth);
            Assert.AreEqual(120f, root_child0.LayoutHeight);

            Assert.AreEqual(52f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(148f, root_child1.LayoutWidth);
            Assert.AreEqual(40f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(148f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(52f, root_child0.LayoutWidth);
            Assert.AreEqual(120f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(148f, root_child1.LayoutWidth);
            Assert.AreEqual(40f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_cross_max_height()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 10f;
            root_child0.MaxHeight = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 10f;
            root_child1.MaxHeight = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(120f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(120f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(40f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(120f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(120f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(40f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_main_max_width()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 15f;
            root_child0.MaxWidth = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 10f;
            root_child1.MaxWidth = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(120f, root_child0.LayoutWidth);
            Assert.AreEqual(200f, root_child0.LayoutHeight);

            Assert.AreEqual(120f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(40f, root_child1.LayoutWidth);
            Assert.AreEqual(200f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(80f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(120f, root_child0.LayoutWidth);
            Assert.AreEqual(200f, root_child0.LayoutHeight);

            Assert.AreEqual(40f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(40f, root_child1.LayoutWidth);
            Assert.AreEqual(200f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_cross_max_width()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 10f;
            root_child0.MaxWidth = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 15f;
            root_child1.MaxWidth = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(120f, root_child0.LayoutWidth);
            Assert.AreEqual(50f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(50f, root_child1.LayoutY);
            Assert.AreEqual(40f, root_child1.LayoutWidth);
            Assert.AreEqual(150f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(80f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(120f, root_child0.LayoutWidth);
            Assert.AreEqual(50f, root_child0.LayoutHeight);

            Assert.AreEqual(160f, root_child1.LayoutX);
            Assert.AreEqual(50f, root_child1.LayoutY);
            Assert.AreEqual(40f, root_child1.LayoutWidth);
            Assert.AreEqual(150f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_main_min_width()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.FlexDirection = YogaFlexDirection.Row;
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 15f;
            root_child0.MinWidth = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 10f;
            root_child1.MinWidth = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(120f, root_child0.LayoutWidth);
            Assert.AreEqual(200f, root_child0.LayoutHeight);

            Assert.AreEqual(120f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(80f, root_child1.LayoutWidth);
            Assert.AreEqual(200f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(80f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(120f, root_child0.LayoutWidth);
            Assert.AreEqual(200f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(0f, root_child1.LayoutY);
            Assert.AreEqual(80f, root_child1.LayoutWidth);
            Assert.AreEqual(200f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_flex_basis_cross_min_width()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 10f;
            root_child0.MinWidth = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 15f;
            root_child1.MinWidth = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(50f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(50f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(150f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(0f, root_child0.LayoutX);
            Assert.AreEqual(0f, root_child0.LayoutY);
            Assert.AreEqual(200f, root_child0.LayoutWidth);
            Assert.AreEqual(50f, root_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(50f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(150f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

        [Test]
        public void Test_percentage_multiple_nested_with_padding_margin_and_percentage_values()
        {
            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, true);

            YogaNode root = new YogaNode();
            root.Width = 200f;
            root.Height = 200f;

            YogaNode root_child0 = new YogaNode();
            root_child0.FlexGrow = 1f;
            root_child0.FlexBasis = 10f;
            root_child0.SetMargin(YogaEdge.Left, 5f);
            root_child0.SetMargin(YogaEdge.Top, 5f);
            root_child0.SetMargin(YogaEdge.Right, 5f);
            root_child0.SetMargin(YogaEdge.Bottom, 5f);
            root_child0.SetPadding(YogaEdge.Left, 3f);
            root_child0.SetPadding(YogaEdge.Top, 3f);
            root_child0.SetPadding(YogaEdge.Right, 3f);
            root_child0.SetPadding(YogaEdge.Bottom, 3f);
            root_child0.MinWidth = 60f;
            root.Insert(0, root_child0);

            YogaNode root_child0_child0 = new YogaNode();
            root_child0_child0.SetMargin(YogaEdge.Left, 5f);
            root_child0_child0.SetMargin(YogaEdge.Top, 5f);
            root_child0_child0.SetMargin(YogaEdge.Right, 5f);
            root_child0_child0.SetMargin(YogaEdge.Bottom, 5f);
            root_child0_child0.SetPadding(YogaEdge.Left, 3f);
            root_child0_child0.SetPadding(YogaEdge.Top, 3f);
            root_child0_child0.SetPadding(YogaEdge.Right, 3f);
            root_child0_child0.SetPadding(YogaEdge.Bottom, 3f);
            root_child0_child0.Width = 50f;
            root_child0.Insert(0, root_child0_child0);

            YogaNode root_child0_child0_child0 = new YogaNode();
            root_child0_child0_child0.SetMargin(YogaEdge.Left, 5f);
            root_child0_child0_child0.SetMargin(YogaEdge.Top, 5f);
            root_child0_child0_child0.SetMargin(YogaEdge.Right, 5f);
            root_child0_child0_child0.SetMargin(YogaEdge.Bottom, 5f);
            root_child0_child0_child0.SetPadding(YogaEdge.Left, 3f);
            root_child0_child0_child0.SetPadding(YogaEdge.Top, 3f);
            root_child0_child0_child0.SetPadding(YogaEdge.Right, 3f);
            root_child0_child0_child0.SetPadding(YogaEdge.Bottom, 3f);
            root_child0_child0_child0.Width = 45f;
            root_child0_child0.Insert(0, root_child0_child0_child0);

            YogaNode root_child1 = new YogaNode();
            root_child1.FlexGrow = 4f;
            root_child1.FlexBasis = 15f;
            root_child1.MinWidth = 20f;
            root.Insert(1, root_child1);
            root.StyleDirection = YogaDirection.LTR;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(5f, root_child0.LayoutX);
            Assert.AreEqual(5f, root_child0.LayoutY);
            Assert.AreEqual(190f, root_child0.LayoutWidth);
            Assert.AreEqual(48f, root_child0.LayoutHeight);

            Assert.AreEqual(8f, root_child0_child0.LayoutX);
            Assert.AreEqual(8f, root_child0_child0.LayoutY);
            Assert.AreEqual(92f, root_child0_child0.LayoutWidth);
            Assert.AreEqual(25f, root_child0_child0.LayoutHeight);

            Assert.AreEqual(10f, root_child0_child0_child0.LayoutX);
            Assert.AreEqual(10f, root_child0_child0_child0.LayoutY);
            Assert.AreEqual(36f, root_child0_child0_child0.LayoutWidth);
            Assert.AreEqual(6f, root_child0_child0_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(58f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(142f, root_child1.LayoutHeight);

            root.StyleDirection = YogaDirection.RTL;
            root.CalculateLayout();

            Assert.AreEqual(0f, root.LayoutX);
            Assert.AreEqual(0f, root.LayoutY);
            Assert.AreEqual(200f, root.LayoutWidth);
            Assert.AreEqual(200f, root.LayoutHeight);

            Assert.AreEqual(5f, root_child0.LayoutX);
            Assert.AreEqual(5f, root_child0.LayoutY);
            Assert.AreEqual(190f, root_child0.LayoutWidth);
            Assert.AreEqual(48f, root_child0.LayoutHeight);

            Assert.AreEqual(90f, root_child0_child0.LayoutX);
            Assert.AreEqual(8f, root_child0_child0.LayoutY);
            Assert.AreEqual(92f, root_child0_child0.LayoutWidth);
            Assert.AreEqual(25f, root_child0_child0.LayoutHeight);

            Assert.AreEqual(46f, root_child0_child0_child0.LayoutX);
            Assert.AreEqual(10f, root_child0_child0_child0.LayoutY);
            Assert.AreEqual(36f, root_child0_child0_child0.LayoutWidth);
            Assert.AreEqual(6f, root_child0_child0_child0.LayoutHeight);

            Assert.AreEqual(0f, root_child1.LayoutX);
            Assert.AreEqual(58f, root_child1.LayoutY);
            Assert.AreEqual(200f, root_child1.LayoutWidth);
            Assert.AreEqual(142f, root_child1.LayoutHeight);

            YogaNode.SetExperimentalFeatureEnabled(YogaExperimentalFeature.Rounding, false);
        }

    }
}
