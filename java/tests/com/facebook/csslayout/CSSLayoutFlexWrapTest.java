/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

 // @Generated by gentest/gentest.rb from gentest/fixtures/CSSLayoutFlexWrapTest.html

package com.facebook.csslayout;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class CSSLayoutFlexWrapTest {
  @Test
  public void test_wrap_column() {
    final CSSNode root = new CSSNode();
    root.setWrap(CSSWrap.WRAP);
    root.setStyleHeight(100f);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(30f);
    root_child0.setStyleHeight(30f);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(30f);
    root_child1.setStyleHeight(30f);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(30f);
    root_child2.setStyleHeight(30f);
    root.addChildAt(root_child2, 2);

    final CSSNode root_child3 = new CSSNode();
    root_child3.setStyleWidth(30f);
    root_child3.setStyleHeight(30f);
    root.addChildAt(root_child3, 3);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(60f, root.getLayoutWidth(), 0.0f);
    assertEquals(100f, root.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child0.getLayoutX(), 0.0f);
    assertEquals(0f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child1.getLayoutX(), 0.0f);
    assertEquals(30f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child2.getLayoutX(), 0.0f);
    assertEquals(60f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child3.getLayoutX(), 0.0f);
    assertEquals(0f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(60f, root.getLayoutWidth(), 0.0f);
    assertEquals(100f, root.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child0.getLayoutX(), 0.0f);
    assertEquals(0f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child1.getLayoutX(), 0.0f);
    assertEquals(30f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child2.getLayoutX(), 0.0f);
    assertEquals(60f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child3.getLayoutX(), 0.0f);
    assertEquals(0f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_wrap_row() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setWrap(CSSWrap.WRAP);
    root.setStyleWidth(100f);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(30f);
    root_child0.setStyleHeight(30f);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(30f);
    root_child1.setStyleHeight(30f);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(30f);
    root_child2.setStyleHeight(30f);
    root.addChildAt(root_child2, 2);

    final CSSNode root_child3 = new CSSNode();
    root_child3.setStyleWidth(30f);
    root_child3.setStyleHeight(30f);
    root.addChildAt(root_child3, 3);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(100f, root.getLayoutWidth(), 0.0f);
    assertEquals(60f, root.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child0.getLayoutX(), 0.0f);
    assertEquals(0f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child1.getLayoutX(), 0.0f);
    assertEquals(0f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(60f, root_child2.getLayoutX(), 0.0f);
    assertEquals(0f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child3.getLayoutX(), 0.0f);
    assertEquals(30f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(100f, root.getLayoutWidth(), 0.0f);
    assertEquals(60f, root.getLayoutHeight(), 0.0f);

    assertEquals(70f, root_child0.getLayoutX(), 0.0f);
    assertEquals(0f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(40f, root_child1.getLayoutX(), 0.0f);
    assertEquals(0f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(10f, root_child2.getLayoutX(), 0.0f);
    assertEquals(0f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(70f, root_child3.getLayoutX(), 0.0f);
    assertEquals(30f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_wrap_row_align_items_flex_end() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setAlignItems(CSSAlign.FLEX_END);
    root.setWrap(CSSWrap.WRAP);
    root.setStyleWidth(100f);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(30f);
    root_child0.setStyleHeight(10f);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(30f);
    root_child1.setStyleHeight(20f);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(30f);
    root_child2.setStyleHeight(30f);
    root.addChildAt(root_child2, 2);

    final CSSNode root_child3 = new CSSNode();
    root_child3.setStyleWidth(30f);
    root_child3.setStyleHeight(30f);
    root.addChildAt(root_child3, 3);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(100f, root.getLayoutWidth(), 0.0f);
    assertEquals(60f, root.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child0.getLayoutX(), 0.0f);
    assertEquals(20f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child1.getLayoutX(), 0.0f);
    assertEquals(10f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(60f, root_child2.getLayoutX(), 0.0f);
    assertEquals(0f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child3.getLayoutX(), 0.0f);
    assertEquals(30f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(100f, root.getLayoutWidth(), 0.0f);
    assertEquals(60f, root.getLayoutHeight(), 0.0f);

    assertEquals(70f, root_child0.getLayoutX(), 0.0f);
    assertEquals(20f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(40f, root_child1.getLayoutX(), 0.0f);
    assertEquals(10f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(10f, root_child2.getLayoutX(), 0.0f);
    assertEquals(0f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(70f, root_child3.getLayoutX(), 0.0f);
    assertEquals(30f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_wrap_row_align_items_center() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setAlignItems(CSSAlign.CENTER);
    root.setWrap(CSSWrap.WRAP);
    root.setStyleWidth(100f);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setStyleWidth(30f);
    root_child0.setStyleHeight(10f);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setStyleWidth(30f);
    root_child1.setStyleHeight(20f);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setStyleWidth(30f);
    root_child2.setStyleHeight(30f);
    root.addChildAt(root_child2, 2);

    final CSSNode root_child3 = new CSSNode();
    root_child3.setStyleWidth(30f);
    root_child3.setStyleHeight(30f);
    root.addChildAt(root_child3, 3);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(100f, root.getLayoutWidth(), 0.0f);
    assertEquals(60f, root.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child0.getLayoutX(), 0.0f);
    assertEquals(10f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(30f, root_child1.getLayoutX(), 0.0f);
    assertEquals(5f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(60f, root_child2.getLayoutX(), 0.0f);
    assertEquals(0f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child3.getLayoutX(), 0.0f);
    assertEquals(30f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(100f, root.getLayoutWidth(), 0.0f);
    assertEquals(60f, root.getLayoutHeight(), 0.0f);

    assertEquals(70f, root_child0.getLayoutX(), 0.0f);
    assertEquals(10f, root_child0.getLayoutY(), 0.0f);
    assertEquals(30f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(10f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(40f, root_child1.getLayoutX(), 0.0f);
    assertEquals(5f, root_child1.getLayoutY(), 0.0f);
    assertEquals(30f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(10f, root_child2.getLayoutX(), 0.0f);
    assertEquals(0f, root_child2.getLayoutY(), 0.0f);
    assertEquals(30f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(70f, root_child3.getLayoutX(), 0.0f);
    assertEquals(30f, root_child3.getLayoutY(), 0.0f);
    assertEquals(30f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(30f, root_child3.getLayoutHeight(), 0.0f);
  }

  @Test
  public void test_wrap_flex_with_flex_basis_smallerthan_min_width() {
    final CSSNode root = new CSSNode();
    root.setFlexDirection(CSSFlexDirection.ROW);
    root.setWrap(CSSWrap.WRAP);
    root.setStyleWidth(80f);

    final CSSNode root_child0 = new CSSNode();
    root_child0.setFlexGrow(1f);
    root_child0.setFlexBasis(40f);
    root_child0.setStyleMinWidth(50f);
    root_child0.setStyleHeight(20f);
    root.addChildAt(root_child0, 0);

    final CSSNode root_child1 = new CSSNode();
    root_child1.setFlexGrow(1f);
    root_child1.setFlexBasis(40f);
    root_child1.setStyleMinWidth(50f);
    root_child1.setStyleHeight(20f);
    root.addChildAt(root_child1, 1);

    final CSSNode root_child2 = new CSSNode();
    root_child2.setFlexGrow(1f);
    root_child2.setFlexBasis(40f);
    root_child2.setStyleMinWidth(50f);
    root_child2.setStyleHeight(20f);
    root.addChildAt(root_child2, 2);

    final CSSNode root_child3 = new CSSNode();
    root_child3.setFlexGrow(1f);
    root_child3.setFlexBasis(40f);
    root_child3.setStyleMinWidth(50f);
    root_child3.setStyleHeight(20f);
    root.addChildAt(root_child3, 3);

    final CSSNode root_child4 = new CSSNode();
    root_child4.setFlexGrow(1f);
    root_child4.setFlexBasis(40f);
    root_child4.setStyleMinWidth(50f);
    root_child4.setStyleHeight(20f);
    root.addChildAt(root_child4, 4);
    root.setDirection(CSSDirection.LTR);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(80f, root.getLayoutWidth(), 0.0f);
    assertEquals(100f, root.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child0.getLayoutX(), 0.0f);
    assertEquals(0f, root_child0.getLayoutY(), 0.0f);
    assertEquals(80f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child1.getLayoutX(), 0.0f);
    assertEquals(20f, root_child1.getLayoutY(), 0.0f);
    assertEquals(80f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child2.getLayoutX(), 0.0f);
    assertEquals(40f, root_child2.getLayoutY(), 0.0f);
    assertEquals(80f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child3.getLayoutX(), 0.0f);
    assertEquals(60f, root_child3.getLayoutY(), 0.0f);
    assertEquals(80f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child3.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child4.getLayoutX(), 0.0f);
    assertEquals(80f, root_child4.getLayoutY(), 0.0f);
    assertEquals(80f, root_child4.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child4.getLayoutHeight(), 0.0f);

    root.setDirection(CSSDirection.RTL);
    root.calculateLayout(null);

    assertEquals(0f, root.getLayoutX(), 0.0f);
    assertEquals(0f, root.getLayoutY(), 0.0f);
    assertEquals(80f, root.getLayoutWidth(), 0.0f);
    assertEquals(100f, root.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child0.getLayoutX(), 0.0f);
    assertEquals(0f, root_child0.getLayoutY(), 0.0f);
    assertEquals(80f, root_child0.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child0.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child1.getLayoutX(), 0.0f);
    assertEquals(20f, root_child1.getLayoutY(), 0.0f);
    assertEquals(80f, root_child1.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child1.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child2.getLayoutX(), 0.0f);
    assertEquals(40f, root_child2.getLayoutY(), 0.0f);
    assertEquals(80f, root_child2.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child2.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child3.getLayoutX(), 0.0f);
    assertEquals(60f, root_child3.getLayoutY(), 0.0f);
    assertEquals(80f, root_child3.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child3.getLayoutHeight(), 0.0f);

    assertEquals(0f, root_child4.getLayoutX(), 0.0f);
    assertEquals(80f, root_child4.getLayoutY(), 0.0f);
    assertEquals(80f, root_child4.getLayoutWidth(), 0.0f);
    assertEquals(20f, root_child4.getLayoutHeight(), 0.0f);
  }

}
