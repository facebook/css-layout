/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

 // @Generated by gentest/gentest.rb from gentest/fixtures/YGMarginTest.html

var Yoga = Yoga || require('../src/Yoga.js');

describe('YGMarginTest', () => {

  it('margin_start', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeStart, 10);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_top', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_end', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
    Yoga.nodeStyleSetJustifyContent(root, Yoga.JustifyFlexEnd);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeEnd, 10);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_bottom', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetJustifyContent(root, Yoga.JustifyFlexEnd);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeBottom, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_and_flex_row', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeStart, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(90);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(90);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_and_flex_column', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeTop, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(90);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(90);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_and_stretch_row', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeTop, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(90);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(90);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_and_stretch_column', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeStyleSetMargin(root_child0, Yoga.EdgeStart, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(90);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(90);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_with_sibling_row', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeInsertChild(root, root_child0, 0);

    var root_child1 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child1, 1);
    Yoga.nodeInsertChild(root, root_child1, 1);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetTop(root_child1)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child1)).toBe(100);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(50);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child1)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child1)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child1)).toBe(100);

    Yoga.nodeFreeRecursive(root);
  });

  it('margin_with_sibling_column', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child0, 1);
    Yoga.nodeInsertChild(root, root_child0, 0);

    var root_child1 = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexGrow(root_child1, 1);
    Yoga.nodeInsertChild(root, root_child1, 1);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(50);

    expect(Yoga.nodeLayoutGetLeft(root_child1)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetWidth(root_child1)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child1)).toBe(50);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(50);

    expect(Yoga.nodeLayoutGetLeft(root_child1)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetWidth(root_child1)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child1)).toBe(50);

    Yoga.nodeFreeRecursive(root);
  });

});
