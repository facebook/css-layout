/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

 // @Generated by gentest/gentest.rb from gentest/fixtures/YGAbsolutePositionTest.html

var include = require('./include.js');
include.include('../src/YGEnums.js');
include.include('../src/Yoga.js');

describe('YGAbsolutePositionTest', () => {

  it('absolute_layout_width_height_start_top', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child0, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeStart, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeTop, 10);
    _YGNodeStyleSetWidth(root_child0, 10);
    _YGNodeStyleSetHeight(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeFreeRecursive(root);
  });

  it('absolute_layout_width_height_end_bottom', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child0, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeEnd, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeBottom, 10);
    _YGNodeStyleSetWidth(root_child0, 10);
    _YGNodeStyleSetHeight(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeFreeRecursive(root);
  });

  it('absolute_layout_start_top_end_bottom', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child0, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeStart, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeTop, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeEnd, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeBottom, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(80);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(80);

    _YGNodeFreeRecursive(root);
  });

  it('absolute_layout_width_height_start_top_end_bottom', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child0, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeStart, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeTop, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeEnd, 10);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeBottom, 10);
    _YGNodeStyleSetWidth(root_child0, 10);
    _YGNodeStyleSetHeight(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeFreeRecursive(root);
  });

  it('do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetFlexDirection(root, _YGFlexDirectionRow);
    _YGNodeStyleSetOverflow(root, _YGOverflowHidden);
    _YGNodeStyleSetWidth(root, 50);
    _YGNodeStyleSetHeight(root, 50);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child0, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeStart, 0);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeTop, 0);
    _YGNodeInsertChild(root, root_child0, 0);

    var root_child0_child0 = _YGNodeNew();
    _YGNodeStyleSetWidth(root_child0_child0, 100);
    _YGNodeStyleSetHeight(root_child0_child0, 100);
    _YGNodeInsertChild(root_child0, root_child0_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(50);
    expect(_YGNodeLayoutGetHeight(root)).toBe(50);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(0);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0_child0)).toBe(0);
    expect(_YGNodeLayoutGetTop(root_child0_child0)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root_child0_child0)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root_child0_child0)).toBe(100);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(50);
    expect(_YGNodeLayoutGetHeight(root)).toBe(50);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(-50);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0_child0)).toBe(0);
    expect(_YGNodeLayoutGetTop(root_child0_child0)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root_child0_child0)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root_child0_child0)).toBe(100);

    _YGNodeFreeRecursive(root);
  });

  it('absolute_layout_within_border', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetMargin(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetMargin(root, _YGEdgeTop, 10);
    _YGNodeStyleSetMargin(root, _YGEdgeRight, 10);
    _YGNodeStyleSetMargin(root, _YGEdgeBottom, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeTop, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeRight, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeBottom, 10);
    _YGNodeStyleSetBorder(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetBorder(root, _YGEdgeTop, 10);
    _YGNodeStyleSetBorder(root, _YGEdgeRight, 10);
    _YGNodeStyleSetBorder(root, _YGEdgeBottom, 10);
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child0, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeLeft, 0);
    _YGNodeStyleSetPosition(root_child0, _YGEdgeTop, 0);
    _YGNodeStyleSetWidth(root_child0, 50);
    _YGNodeStyleSetHeight(root_child0, 50);
    _YGNodeInsertChild(root, root_child0, 0);

    var root_child1 = _YGNodeNew();
    _YGNodeStyleSetPositionType(root_child1, _YGPositionTypeAbsolute);
    _YGNodeStyleSetPosition(root_child1, _YGEdgeRight, 0);
    _YGNodeStyleSetPosition(root_child1, _YGEdgeBottom, 0);
    _YGNodeStyleSetWidth(root_child1, 50);
    _YGNodeStyleSetHeight(root_child1, 50);
    _YGNodeInsertChild(root, root_child1, 1);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(10);
    expect(_YGNodeLayoutGetTop(root)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(50);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(50);

    expect(_YGNodeLayoutGetLeft(root_child1)).toBe(40);
    expect(_YGNodeLayoutGetTop(root_child1)).toBe(40);
    expect(_YGNodeLayoutGetWidth(root_child1)).toBe(50);
    expect(_YGNodeLayoutGetHeight(root_child1)).toBe(50);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(10);
    expect(_YGNodeLayoutGetTop(root)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(50);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(50);

    expect(_YGNodeLayoutGetLeft(root_child1)).toBe(40);
    expect(_YGNodeLayoutGetTop(root_child1)).toBe(40);
    expect(_YGNodeLayoutGetWidth(root_child1)).toBe(50);
    expect(_YGNodeLayoutGetHeight(root_child1)).toBe(50);

    _YGNodeFreeRecursive(root);
  });

});
