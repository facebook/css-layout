/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

<<<<<<< HEAD
<<<<<<< HEAD
 // @Generated by gentest/gentest.rb from gentest/fixtures/Yoga.AbsolutePositionTest.html

(function() {
  console.log('absolute_layout_width_height_start_top');
  const root = Yoga.nodeNew();
  Yoga.nodeStyleSetWidth(root, 100);
  Yoga.nodeStyleSetHeight(root, 100);

  const root_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 10);
  Yoga.nodeStyleSetWidth(root_child0, 10);
  Yoga.nodeStyleSetHeight(root_child0, 10);
  Yoga.nodeInsertChild(root, root_child0, 0);
  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeFreeRecursive(root);
})();

(function() {
  console.log('absolute_layout_width_height_end_bottom');
  const root = Yoga.nodeNew();
  Yoga.nodeStyleSetWidth(root, 100);
  Yoga.nodeStyleSetHeight(root, 100);

  const root_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeEnd, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeBottom, 10);
  Yoga.nodeStyleSetWidth(root_child0, 10);
  Yoga.nodeStyleSetHeight(root_child0, 10);
  Yoga.nodeInsertChild(root, root_child0, 0);
  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeFreeRecursive(root);
})();

(function() {
  console.log('absolute_layout_start_top_end_bottom');
  const root = Yoga.nodeNew();
  Yoga.nodeStyleSetWidth(root, 100);
  Yoga.nodeStyleSetHeight(root, 100);

  const root_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeEnd, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeBottom, 10);
  Yoga.nodeInsertChild(root, root_child0, 0);
  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeFreeRecursive(root);
})();

(function() {
  console.log('absolute_layout_width_height_start_top_end_bottom');
  const root = Yoga.nodeNew();
  Yoga.nodeStyleSetWidth(root, 100);
  Yoga.nodeStyleSetHeight(root, 100);

  const root_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeEnd, 10);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeBottom, 10);
  Yoga.nodeStyleSetWidth(root_child0, 10);
  Yoga.nodeStyleSetHeight(root_child0, 10);
  Yoga.nodeInsertChild(root, root_child0, 0);
  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(80, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetHeight(root_child0));

  Yoga.nodeFreeRecursive(root);
})();

(function() {
  const root = Yoga.nodeNew();
  Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
  Yoga.nodeStyleSetOverflow(root, Yoga.OverflowHidden);
  Yoga.nodeStyleSetWidth(root, 50);
  Yoga.nodeStyleSetHeight(root, 50);

  const root_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 0);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 0);
  Yoga.nodeInsertChild(root, root_child0, 0);

  const root_child0_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetWidth(root_child0_child0, 100);
  Yoga.nodeStyleSetHeight(root_child0_child0, 100);
  Yoga.nodeInsertChild(root_child0, root_child0_child0, 0);
  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root_child0_child0));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root_child0_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root_child0_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root_child0_child0));

  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(-50, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetLeft(root_child0_child0));
  ASSERT_FLOAT_EQ(0, Yoga.nodeLayoutGetTop(root_child0_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root_child0_child0));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root_child0_child0));

  Yoga.nodeFreeRecursive(root);
})();

(function() {
  const root = Yoga.nodeNew();
  Yoga.nodeStyleSetMargin(root, Yoga.EdgeLeft, 10);
  Yoga.nodeStyleSetMargin(root, Yoga.EdgeTop, 10);
  Yoga.nodeStyleSetMargin(root, Yoga.EdgeRight, 10);
  Yoga.nodeStyleSetMargin(root, Yoga.EdgeBottom, 10);
  Yoga.nodeStyleSetPadding(root, Yoga.EdgeLeft, 10);
  Yoga.nodeStyleSetPadding(root, Yoga.EdgeTop, 10);
  Yoga.nodeStyleSetPadding(root, Yoga.EdgeRight, 10);
  Yoga.nodeStyleSetPadding(root, Yoga.EdgeBottom, 10);
  Yoga.nodeStyleSetBorder(root, Yoga.EdgeLeft, 10);
  Yoga.nodeStyleSetBorder(root, Yoga.EdgeTop, 10);
  Yoga.nodeStyleSetBorder(root, Yoga.EdgeRight, 10);
  Yoga.nodeStyleSetBorder(root, Yoga.EdgeBottom, 10);
  Yoga.nodeStyleSetWidth(root, 100);
  Yoga.nodeStyleSetHeight(root, 100);

  const root_child0 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeLeft, 0);
  Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 0);
  Yoga.nodeStyleSetWidth(root_child0, 50);
  Yoga.nodeStyleSetHeight(root_child0, 50);
  Yoga.nodeInsertChild(root, root_child0, 0);

  const root_child1 = Yoga.nodeNew();
  Yoga.nodeStyleSetPositionType(root_child1, Yoga.PositionTypeAbsolute);
  Yoga.nodeStyleSetPosition(root_child1, Yoga.EdgeRight, 0);
  Yoga.nodeStyleSetPosition(root_child1, Yoga.EdgeBottom, 0);
  Yoga.nodeStyleSetWidth(root_child1, 50);
  Yoga.nodeStyleSetHeight(root_child1, 50);
  Yoga.nodeInsertChild(root, root_child1, 1);
  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(40, Yoga.nodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(40, Yoga.nodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetHeight(root_child1));

  Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetWidth(root));
  ASSERT_FLOAT_EQ(100, Yoga.nodeLayoutGetHeight(root));

  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetLeft(root_child0));
  ASSERT_FLOAT_EQ(10, Yoga.nodeLayoutGetTop(root_child0));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetWidth(root_child0));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetHeight(root_child0));

  ASSERT_FLOAT_EQ(40, Yoga.nodeLayoutGetLeft(root_child1));
  ASSERT_FLOAT_EQ(40, Yoga.nodeLayoutGetTop(root_child1));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetWidth(root_child1));
  ASSERT_FLOAT_EQ(50, Yoga.nodeLayoutGetHeight(root_child1));

  Yoga.nodeFreeRecursive(root);
})();
=======
=======
>>>>>>> splhack-gentest-js
 // @Generated by gentest/gentest.rb from gentest/fixtures/YGAbsolutePositionTest.html

var Yoga = Yoga || require('../src/Yoga.js');

describe('YGAbsolutePositionTest', () => {

  it('absolute_layout_width_height_start_top', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeFreeRecursive(root);
  });

  it('absolute_layout_width_height_end_bottom', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeEnd, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeBottom, 10);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeFreeRecursive(root);
  });

  it('absolute_layout_start_top_end_bottom', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeEnd, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeBottom, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(80);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(80);

    Yoga.nodeFreeRecursive(root);
  });

  it('absolute_layout_width_height_start_top_end_bottom', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeEnd, 10);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeBottom, 10);
    Yoga.nodeStyleSetWidth(root_child0, 10);
    Yoga.nodeStyleSetHeight(root_child0, 10);
    Yoga.nodeInsertChild(root, root_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(80);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(10);

    Yoga.nodeFreeRecursive(root);
  });

  it('do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetFlexDirection(root, Yoga.FlexDirectionRow);
    Yoga.nodeStyleSetOverflow(root, Yoga.OverflowHidden);
    Yoga.nodeStyleSetWidth(root, 50);
    Yoga.nodeStyleSetHeight(root, 50);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeStart, 0);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 0);
    Yoga.nodeInsertChild(root, root_child0, 0);

    var root_child0_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetWidth(root_child0_child0, 100);
    Yoga.nodeStyleSetHeight(root_child0_child0, 100);
    Yoga.nodeInsertChild(root_child0, root_child0_child0, 0);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(50);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0_child0)).toBe(100);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(50);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(-50);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetTop(root_child0_child0)).toBe(0);
    expect(Yoga.nodeLayoutGetWidth(root_child0_child0)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root_child0_child0)).toBe(100);

    Yoga.nodeFreeRecursive(root);
  });

  it('absolute_layout_within_border', () => {
    var root = Yoga.nodeNew();
    Yoga.nodeStyleSetMargin(root, Yoga.EdgeLeft, 10);
    Yoga.nodeStyleSetMargin(root, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetMargin(root, Yoga.EdgeRight, 10);
    Yoga.nodeStyleSetMargin(root, Yoga.EdgeBottom, 10);
    Yoga.nodeStyleSetPadding(root, Yoga.EdgeLeft, 10);
    Yoga.nodeStyleSetPadding(root, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetPadding(root, Yoga.EdgeRight, 10);
    Yoga.nodeStyleSetPadding(root, Yoga.EdgeBottom, 10);
    Yoga.nodeStyleSetBorder(root, Yoga.EdgeLeft, 10);
    Yoga.nodeStyleSetBorder(root, Yoga.EdgeTop, 10);
    Yoga.nodeStyleSetBorder(root, Yoga.EdgeRight, 10);
    Yoga.nodeStyleSetBorder(root, Yoga.EdgeBottom, 10);
    Yoga.nodeStyleSetWidth(root, 100);
    Yoga.nodeStyleSetHeight(root, 100);

    var root_child0 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child0, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeLeft, 0);
    Yoga.nodeStyleSetPosition(root_child0, Yoga.EdgeTop, 0);
    Yoga.nodeStyleSetWidth(root_child0, 50);
    Yoga.nodeStyleSetHeight(root_child0, 50);
    Yoga.nodeInsertChild(root, root_child0, 0);

    var root_child1 = Yoga.nodeNew();
    Yoga.nodeStyleSetPositionType(root_child1, Yoga.PositionTypeAbsolute);
    Yoga.nodeStyleSetPosition(root_child1, Yoga.EdgeRight, 0);
    Yoga.nodeStyleSetPosition(root_child1, Yoga.EdgeBottom, 0);
    Yoga.nodeStyleSetWidth(root_child1, 50);
    Yoga.nodeStyleSetHeight(root_child1, 50);
    Yoga.nodeInsertChild(root, root_child1, 1);
    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionLTR);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(50);

    expect(Yoga.nodeLayoutGetLeft(root_child1)).toBe(40);
    expect(Yoga.nodeLayoutGetTop(root_child1)).toBe(40);
    expect(Yoga.nodeLayoutGetWidth(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child1)).toBe(50);

    Yoga.nodeCalculateLayout(root, Yoga.Undefined, Yoga.Undefined, Yoga.DirectionRTL);

    expect(Yoga.nodeLayoutGetLeft(root)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root)).toBe(100);
    expect(Yoga.nodeLayoutGetHeight(root)).toBe(100);

    expect(Yoga.nodeLayoutGetLeft(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetTop(root_child0)).toBe(10);
    expect(Yoga.nodeLayoutGetWidth(root_child0)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child0)).toBe(50);

    expect(Yoga.nodeLayoutGetLeft(root_child1)).toBe(40);
    expect(Yoga.nodeLayoutGetTop(root_child1)).toBe(40);
    expect(Yoga.nodeLayoutGetWidth(root_child1)).toBe(50);
    expect(Yoga.nodeLayoutGetHeight(root_child1)).toBe(50);

    Yoga.nodeFreeRecursive(root);
  });

});
<<<<<<< HEAD
>>>>>>> origin/splhack-gentest-js
=======
>>>>>>> splhack-gentest-js
