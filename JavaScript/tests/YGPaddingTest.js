/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

 // @Generated by gentest/gentest.rb from gentest/fixtures/YGPaddingTest.html

var include = require('./include.js');
include.include('../src/YGEnums.js');
include.include('../src/Yoga.js');

describe('YGPaddingTest', () => {

  it('padding_no_size', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetPadding(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeTop, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeRight, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeBottom, 10);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(20);
    expect(_YGNodeLayoutGetHeight(root)).toBe(20);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(20);
    expect(_YGNodeLayoutGetHeight(root)).toBe(20);

    _YGNodeFreeRecursive(root);
  });

  it('padding_container_match_child', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetPadding(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeTop, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeRight, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeBottom, 10);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetWidth(root_child0, 10);
    _YGNodeStyleSetHeight(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(30);
    expect(_YGNodeLayoutGetHeight(root)).toBe(30);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(30);
    expect(_YGNodeLayoutGetHeight(root)).toBe(30);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeFreeRecursive(root);
  });

  it('padding_flex_child', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetPadding(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeTop, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeRight, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeBottom, 10);
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetFlexGrow(root_child0, 1);
    _YGNodeStyleSetWidth(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(80);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(80);

    _YGNodeFreeRecursive(root);
  });

  it('padding_stretch_child', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetPadding(root, _YGEdgeLeft, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeTop, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeRight, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeBottom, 10);
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetHeight(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(80);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeFreeRecursive(root);
  });

  it('padding_center_child', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetJustifyContent(root, _YGJustifyCenter);
    _YGNodeStyleSetAlignItems(root, _YGAlignCenter);
    _YGNodeStyleSetPadding(root, _YGEdgeStart, 10);
    _YGNodeStyleSetPadding(root, _YGEdgeEnd, 20);
    _YGNodeStyleSetPadding(root, _YGEdgeBottom, 20);
    _YGNodeStyleSetWidth(root, 100);
    _YGNodeStyleSetHeight(root, 100);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetWidth(root_child0, 10);
    _YGNodeStyleSetHeight(root_child0, 10);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(40);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(35);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root)).toBe(100);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(50);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(35);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(10);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(10);

    _YGNodeFreeRecursive(root);
  });

  it('child_with_padding_align_end', () => {
    var root = _YGNodeNew();
    _YGNodeStyleSetJustifyContent(root, _YGJustifyFlexEnd);
    _YGNodeStyleSetAlignItems(root, _YGAlignFlexEnd);
    _YGNodeStyleSetWidth(root, 200);
    _YGNodeStyleSetHeight(root, 200);

    var root_child0 = _YGNodeNew();
    _YGNodeStyleSetPadding(root_child0, _YGEdgeLeft, 20);
    _YGNodeStyleSetPadding(root_child0, _YGEdgeTop, 20);
    _YGNodeStyleSetPadding(root_child0, _YGEdgeRight, 20);
    _YGNodeStyleSetPadding(root_child0, _YGEdgeBottom, 20);
    _YGNodeStyleSetWidth(root_child0, 100);
    _YGNodeStyleSetHeight(root_child0, 100);
    _YGNodeInsertChild(root, root_child0, 0);
    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionLTR);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(200);
    expect(_YGNodeLayoutGetHeight(root)).toBe(200);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(100);

    _YGNodeCalculateLayout(root, _YGUndefined, _YGUndefined, _YGDirectionRTL);

    expect(_YGNodeLayoutGetLeft(root)).toBe(0);
    expect(_YGNodeLayoutGetTop(root)).toBe(0);
    expect(_YGNodeLayoutGetWidth(root)).toBe(200);
    expect(_YGNodeLayoutGetHeight(root)).toBe(200);

    expect(_YGNodeLayoutGetLeft(root_child0)).toBe(0);
    expect(_YGNodeLayoutGetTop(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetWidth(root_child0)).toBe(100);
    expect(_YGNodeLayoutGetHeight(root_child0)).toBe(100);

    _YGNodeFreeRecursive(root);
  });

});
